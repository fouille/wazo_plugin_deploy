{"version":3,"file":"assets/js/function.cdf6e6c7dbbd98536203.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yNAAyN;AACpP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I","sources":["webpack://wazo-plugin-deploy-fmw/./src/assets/js/main.functions.js"],"sourcesContent":["// import { \n//   apps_list, \n//   template_sip_webrtc_data_uuid, \n//   template_sip_global_data_uuid, \n//   host, \n//   tenant_uuid, \n//   token_session,\n//   btn_next,\n//   btn_submit\n// } from \"./index\";\n\n// function pour update du sip template\n// export async function update_sip_template_endpoint(keys) {\n//   document.getElementById(\"title_text\").innerText = \"Patientez\";\n//   document.getElementById(\"final-step-one\").innerHTML = '<i class=\"fa-solid fa-spinner fa-spin-pulse\"></i>';\n//   document.getElementById(\"final-step-two\").innerHTML = '<i class=\"fa-solid fa-spinner fa-spin-pulse\"></i>';\n//   document.getElementById(\"final-step-three\").innerHTML = '<i class=\"fa-solid fa-spinner fa-spin-pulse\"></i>';\n//     let say_yes_or_no = \"no\";\n//     if (keys.nat.sip_value == \"rtp_symmetric,rewrite_contact\") {\n//       say_yes_or_no = \"yes\"\n//     };\n//     const api_confd_sip_temp_global_put = '/api/confd/1.1/endpoints/sip/templates/'; \n//     const put_options = {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Wazo-Tenant': tenant_uuid,\n//         'X-Auth-Token': token_session\n//       },\n//       body: JSON.stringify({\n//         \"endpoint_section_options\": [\n//           [\"rtp_timeout\",\n//             \"7200\"],\n//           [\"allow_transfer\",\n//             \"yes\"],\n//           [ \"use_ptime\",\n//             \"yes\"],\n//           [\"callerid\",\n//             \"wazo\"],\n//           [\"direct_media\",\n//             \"no\"],\n//           [\"dtmf_mode\",\n//             \"rfc4733\" ],\n//           [\"language\",\n//             keys.locale.sip_value],\n//           [\"inband_progress\",\n//             \"no\"],\n//           [\"rtp_timeout_hold\",\n//             \"0\"],\n//           [\"timers_sess_expires\",\n//             \"600\"],\n//           [\"timers_min_se\",\n//             \"90\"],\n//           [\"trust_id_inbound\",\n//             \"no\"],\n//           [\"allow_subscribe\",\n//             \"yes\"],\n//           [\"allow\",\n//             keys.codecs.sip_value],\n//           [\"rewrite_contact\",\n//             say_yes_or_no],\n//           [\"rtp_symmetric\",\n//             say_yes_or_no],\n//           [\"moh_suggest\",\n//             keys.moh.sip_value]\n//         ]\n//       })\n//     };\n//     try {\n//       let promise = await fetch(host+api_confd_sip_temp_global_put+template_sip_global_data_uuid, put_options);\n//       if (promise == null || promise.status == 204 || promise.ok){\n//         update_sip_template_webrtc_endpoint(keys)\n//       } else {\n//           // console.log(\"no auth\");\n//       }\n//       } catch (erreur) {\n//           console.error(\"Erreur :\", erreur); \n//       }\n// }\n\n// function pour update du sip template WEBRTC\n// async function update_sip_template_webrtc_endpoint(pkeys) {\n//   const api_confd_sip_temp_global_put = '/api/confd/1.1/endpoints/sip/templates/'; \n//   const put_options = {\n//     method: 'PUT',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       'Wazo-Tenant': tenant_uuid,\n//       'X-Auth-Token': token_session\n//     },\n//     body: JSON.stringify({\n//       \"endpoint_section_options\": [\n//         [\"webrtc\",\n//           \"yes\"],\n//         [\"max_audio_streams\",\n//           \"1\"],\n//         [ \"max_video_streams\",\n//           \"25\"],\n//         [\"allow\",\n//         pkeys.app_codecs.sip_value],\n//         [\"dtls_auto_generate_cert\",\n//           \"yes\"]\n//       ]\n//     })\n//   };\n//   try {\n//     let promise = await fetch(host+api_confd_sip_temp_global_put+template_sip_webrtc_data_uuid, put_options);\n//     if (promise == null || promise.status == 204 || promise.ok){\n//       document.getElementById(\"final-step-one\").innerHTML = '<i class=\"fa-solid fa-circle-check text-success fa-beat\"></i>';\n//       update_apps(apps_list, pkeys)\n//     } else {\n//         // console.log(\"no auth\");\n//     }\n//     } catch (erreur) {\n//         console.error(\"Erreur :\", erreur); \n//     }\n// }\n\n// async function updateORcreate_ext_apps(name, app_keys, create_or_not) {\n//   const api_confd_sip_temp_global_put = '/api/confd/1.1/external/apps/'+name;\n//   let conf;\n//   let PUT_or_POST;\n//   if (name == \"wazo-euc-application-mobile\") {\n//     (create_or_not == 0) ? PUT_or_POST = \"PUT\" : PUT_or_POST = \"POST\";\n//     conf = {\n//       \"turn_servers\":\"[{\\\"urls\\\":\\\"turn:\"+app_keys.app_ma.server_turn_ma+\":\"+app_keys.app_ma.server_port_turn_ma+\"\\\",\\\"username\\\":\\\"\"+app_keys.app_ma.server_username_turn_ma+\"\\\",\\\"credential\\\":\\\"\"+app_keys.app_ma.server_password_turn_ma+\"\\\"}]\"\n//     }\n    \n//   }\n//   else if (name == \"wazo-euc-application-desktop\" || name == \"wazo-euc-application-web\") {\n//     (create_or_not == 0) ? PUT_or_POST = \"PUT\" : PUT_or_POST = \"POST\";\n//     conf = {\n//       \"stun_servers\": \"stun:\" + app_keys.app_wda.server_stun_wda + \":\" + app_keys.app_wda.server_port_stun_wda \n//     }\n//   }\n//   const put_options = {\n//     method: PUT_or_POST,\n//     headers: {\n//       'Content-Type': 'application/json',\n//       'Wazo-Tenant': tenant_uuid,\n//       'X-Auth-Token': token_session\n//     },\n//     body: JSON.stringify({\n//       \"configuration\": conf,\n//       \"label\": name \n//     })\n//   };\n//   try {\n//     let promise = await fetch(host+api_confd_sip_temp_global_put, put_options);\n//     if (promise == null || promise.status == 204 || promise.ok){\n//       // console.log(name + \": OK\");\n//     }else{\n//       // console.log(name + \": NOK\");\n//     }\n//   }\n//   catch (erreur) {\n//         console.error(\"Erreur :\", erreur); \n//   }\n// }\n// function pour update ou ajout une configuration d'application \n// async function update_apps(apps_list, app_keys) {\n//   // console.log(apps_list);\n//   if (apps_list.total > 0 && (app_keys.app_ma.enable == \"true\" || app_keys.app_wda.enable == \"true\")){\n//     // console.log(\"Etat MA = \" + app_keys.app_ma.enable);\n//     // console.log(\"Etat WDA = \" + app_keys.app_wda.enable);\n//     let apps_items = apps_list.items;\n//     let apps_labell = app_keys.app_labels.activate_labels;\n//     for (let g = 0; g < apps_labell.length; g++) {\n//       // console.log(apps_items);\n//       // console.log(\"Demande d'app conf: \"+ apps_labell[g]);\n//       const checkItemsExist = obj => obj.name === apps_labell[g];\n//       // console.log(\"CHECK ITEM\");\n//       let label_name_check = apps_items.some(checkItemsExist);\n//       // console.log(label_name_check);\n//       // console.log(\"FIN CHECK\");\n//       let label_name = apps_labell[g];\n//       //je trouve un objet dans les items dapp retournés\n//       if (label_name_check === true) {\n//         // console.log(\"L'app existe deja alors\");\n//         // console.log(\"BOUCLE UPDATE\");       \n//         if (label_name == apps_labell[g]) {\n//           // console.log(\"boucle update label: \"+label_name);\n//           await updateORcreate_ext_apps(label_name, app_keys, 0)\n//         }else{\n//           // console.log(\"erreur boucle update\");\n//         }\n//       }else if (label_name_check === false) {\n//         // console.log(\"L'app N'existe PAS deja alors\");\n//         // console.log(\"BOUCLE CREATE\");\n//         // console.log(apps_labell[g]);\n//         // console.log(\"boucle create label: \"+apps_labell[g]);\n//         await updateORcreate_ext_apps(apps_labell[g], app_keys, 1)\n//       }\n//     }\n//   }else if(apps_list.total == 0 && (app_keys.app_ma.enable == \"true\" || app_keys.app_wda.enable == \"true\")){\n//     // console.log(\"il ny a pas d'app configuree : \");\n//     // console.log(\"MA2 = \" + app_keys.app_ma.enable);\n//     // console.log(\"WDA2 = \" + app_keys.app_wda.enable);\n//     //fonction de creation des conf dapp\n//     let apps_label = app_keys.app_labels.activate_labels;\n//     for (let h = 0; h < apps_label.length; h++){\n//       // console.log(\"create app : \" + apps_label[h]);\n//       await updateORcreate_ext_apps(apps_label[h], app_keys, 1)\n//     }\n//   }\n//   else{\n//     // console.log(\"il ny a pas d'app à configurer\");\n//   }\n//   // EXIT de fin\n//   setTimeout(function(){\n//     // let btn_submit = document.getElementsByClassName(\"submit\");\n//     // let btn_next = document.getElementsByClassName(\"backward\");\n//     for (let element of btn_submit) {\n//       element.setAttribute('disabled', 'yes');\n//     }\n//     for (let element of btn_next) {\n//         element.setAttribute('disabled', 'yes');\n//       }\n//       document.getElementById(\"final-step-two\").innerHTML = '<i class=\"fa-solid fa-circle-check text-success fa-beat\"></i>';\n//       document.getElementById(\"final-step-three\").innerHTML = '<i class=\"fa-solid fa-circle-check text-success fa-beat\"></i>';\n//     document.getElementById(\"title_text\").innerText = \"Terminé !\";\n//     document.getElementById(\"subtitle_text\").innerText = \"\";\n//     document.getElementById(\"main_question\").innerText = \"Configuration appliquée :\"\n//   }, 1500);\n\n\n// }\n\n//function update de niceselect\n// export function create_nice_select($select, tag) {\n//     $select.after($('<div></div>')\n//       .addClass('nice-select')\n//       .addClass($select.attr('class') || '')\n//       .addClass($select.attr('disabled') ? 'disabled' : '')\n//       .attr('tabindex', $select.attr('disabled') ? null : '0')\n//       .html('<span class=\"current\"></span><ul class=\"list\"></ul>')\n//     );\n      \n//     var $dropdown = $select.next();\n//     var $options = $select.find('option');\n//     var $selected = $select.find('option:selected');\n    \n//     $dropdown.find('.current').html($selected.data('display') || $selected.text());\n    \n//     $options.each(function(i) {\n//       var $option = $(this);\n//       var display = $option.data('display');\n  \n//       $dropdown.find('ul').append($('<li></li>')\n//         .attr('data-value', $option.val())\n//         .attr('data-display', (display || null))\n//         .addClass('option' + ' ' + tag +\n//           ($option.is(':selected') ? ' selected' : '') +\n//           ($option.is(':disabled') ? ' disabled' : ''))\n//         .html($option.text())\n//       );\n//     });\n// }\n\n// export function add_info_to_summary(data_keys) {\n//     // creation des balises pour la page resumé\n//     const check_before_send = document.getElementsByClassName(\"check_before_send\")[0];\n//     const check_before_send_app = document.getElementsByClassName(\"check_before_send_app\")[0];\n//     check_before_send.innerHTML = \"<li><span class='font-weight-bold'> Langue :</span> \"+ data_keys.locale.label + \"</li>\" +\n//                                   \"<li><span class='font-weight-bold'>Codecs activés :</span> \"+ data_keys.codecs.label + \"</li>\" +\n//                                   \"<li><span class='font-weight-bold'>Musique d'attente :</span> \"+ data_keys.moh.label + \"</li>\" +\n//                                   \"<li><span class='font-weight-bold'>Nat Actif :</span> \"+ data_keys.nat.label + \"</li>\";\n//     check_before_send_app.innerHTML = \"<li><span class='font-weight-bold'>Codecs activés :</span> \"+ data_keys.app_codecs.label + \"</li>\" +\n//                                   \"<li><span class='font-weight-bold'>Service STUN (Web & Desktop) :</span> \"+ ((data_keys.app_wda.enable === \"true\") ? 'Oui' : 'Non') + \"</li>\" +\n//                                   \"<li><span class='font-weight-bold'>Service TURN (Mobile) :</span> \"+ ((data_keys.app_ma.enable === \"true\") ? 'Oui' : 'Non') + \"</li>\"\n  \n// }"],"names":[],"sourceRoot":""}